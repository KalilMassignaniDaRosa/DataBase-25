CREATE DATABASE NORMALIZED_INVOICE;
-- Invoice = fatura

SELECT * FROM INVOICE;
SELECT * FROM PRODUCT;
SELECT * FROM INVOICE_ITEM;

USE NORMALIZED_INVOICE;

CREATE TABLE `INVOICE`(
    `INVOICE_NUMBER` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `CUSTOMER_NAME` VARCHAR(256) NOT NULL,
    `CUSTOMER_ADDRESS` VARCHAR(256) NOT NULL,
    `SELLER_NAME` VARCHAR(256) NOT NULL,
    `ISSUE_DATE` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `TOTAL_VALUE` FLOAT NOT NULL
);

CREATE TABLE `PRODUCT`(
    `PRODUCT_CODE` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `PRODUCT_DESC` VARCHAR(256) NOT NULL,
    `UNIT_MEASURE` CHAR(2) NOT NULL,
    `PRODUCT_VALUE` FLOAT NOT NULL
);

CREATE TABLE `INVOICE_ITEM`(
    `INVOICE_NUMBER` INT NOT NULL,
    `PRODUCT_CODE` INT NOT NULL,
    `PRODUCT_QUANTITY` INT NOT NULL,
    `UNIT_PRICE` FLOAT NOT NULL,
    `TOTAL_PRICE` FLOAT NOT NULL,
    PRIMARY KEY (INVOICE_NUMBER, PRODUCT_CODE),
    CONSTRAINT FK_INVOICE_NUMBER_INVOICE FOREIGN KEY(INVOICE_NUMBER) REFERENCES INVOICE(INVOICE_NUMBER),
    CONSTRAINT FK_PRODUCT_CODE_PRODUCT FOREIGN KEY(PRODUCT_CODE) REFERENCES PRODUCT(PRODUCT_CODE)
);

-- Produtos
INSERT INTO `PRODUCT` (PRODUCT_DESC, UNIT_MEASURE, PRODUCT_VALUE) VALUES ('Milk', 'LT', 4.50);
INSERT INTO `PRODUCT` (PRODUCT_DESC, UNIT_MEASURE, PRODUCT_VALUE) VALUES ('Deodorant', 'UN', 8.00);
INSERT INTO `PRODUCT` (PRODUCT_DESC, UNIT_MEASURE, PRODUCT_VALUE) VALUES ('Salami', 'KG', 40.00);

-- Nota fiscal
INSERT INTO `INVOICE` (CUSTOMER_NAME, CUSTOMER_ADDRESS, SELLER_NAME, TOTAL_VALUE) VALUES ('Aragorn','Middle Earth','Bilbo',100.00);
INSERT INTO `INVOICE` (CUSTOMER_NAME, CUSTOMER_ADDRESS, SELLER_NAME, TOTAL_VALUE) VALUES ('Gandalf','Middle Earth','Frodo',100.00);
INSERT INTO `INVOICE` (CUSTOMER_NAME, CUSTOMER_ADDRESS, SELLER_NAME, TOTAL_VALUE) VALUES ('Boromir','Mordor','Sam',100.00);
INSERT INTO `INVOICE` (CUSTOMER_NAME, CUSTOMER_ADDRESS, SELLER_NAME, TOTAL_VALUE) VALUES ('Galadriel','Valinor','Saruman',100.00);

-- Nota fiscal 1
INSERT INTO `INVOICE_ITEM` (INVOICE_NUMBER, PRODUCT_CODE, PRODUCT_QUANTITY, UNIT_PRICE, TOTAL_PRICE) VALUES(1,1,1,4.50,4.50);
INSERT INTO `INVOICE_ITEM` (INVOICE_NUMBER, PRODUCT_CODE, PRODUCT_QUANTITY, UNIT_PRICE, TOTAL_PRICE) VALUES(1,2,2,40.00,80.00);
INSERT INTO `INVOICE_ITEM` (INVOICE_NUMBER, PRODUCT_CODE, PRODUCT_QUANTITY, UNIT_PRICE, TOTAL_PRICE) VALUES(1,3,10,100.00,1000.00);

-- Nota fiscal 2
INSERT INTO `INVOICE_ITEM` (INVOICE_NUMBER, PRODUCT_CODE, PRODUCT_QUANTITY, UNIT_PRICE, TOTAL_PRICE) VALUES(2,1,1,9.00,9.00);
INSERT INTO `INVOICE_ITEM` (INVOICE_NUMBER, PRODUCT_CODE, PRODUCT_QUANTITY, UNIT_PRICE, TOTAL_PRICE) VALUES(2,2,2,80.00,160.00);
INSERT INTO `INVOICE_ITEM` (INVOICE_NUMBER, PRODUCT_CODE, PRODUCT_QUANTITY, UNIT_PRICE, TOTAL_PRICE) VALUES(2,3,3,33.00,48.50);

-- Nota fiscal 3
INSERT INTO `INVOICE_ITEM` (INVOICE_NUMBER, PRODUCT_CODE, PRODUCT_QUANTITY, UNIT_PRICE, TOTAL_PRICE) VALUES(3,1,1,18.00,18.00);
INSERT INTO `INVOICE_ITEM` (INVOICE_NUMBER, PRODUCT_CODE, PRODUCT_QUANTITY, UNIT_PRICE, TOTAL_PRICE) VALUES(3,2,2,160.00,320.00);
INSERT INTO `INVOICE_ITEM` (INVOICE_NUMBER, PRODUCT_CODE, PRODUCT_QUANTITY, UNIT_PRICE, TOTAL_PRICE) VALUES(3,3,10,400.00,4000.00);

-- Nota fiscal 4
INSERT INTO `INVOICE_ITEM` (INVOICE_NUMBER, PRODUCT_CODE, PRODUCT_QUANTITY, UNIT_PRICE, TOTAL_PRICE) VALUES(4,1,1,32.00,32.00);
INSERT INTO `INVOICE_ITEM` (INVOICE_NUMBER, PRODUCT_CODE, PRODUCT_QUANTITY, UNIT_PRICE, TOTAL_PRICE) VALUES(4,2,2,420.00,840.00);
INSERT INTO `INVOICE_ITEM` (INVOICE_NUMBER, PRODUCT_CODE, PRODUCT_QUANTITY, UNIT_PRICE, TOTAL_PRICE) VALUES(4,3,10,800.00,8000.00);

SELECT * FROM PRODUCT WHERE PRODUCT_CODE=3;

-- UPDATE, atualizando dados de colunas em tabelas
UPDATE PRODUCT
SET PRODUCT_VALUE = 45, PRODUCT_DESC ='UPDATED', UNIT_MEASURE = 'BX' 
WHERE PRODUCT_CODE = 3;

-- DELETE, excluindo registros de tabelas
DELETE FROM PRODUCT 
WHERE PRODUCT_CODE =3;
-- Neste caso uma execao sera lancada
-- Violacao da constraint que amarra o produto ao item na nota fiscal, nao e possivel excluir uma PK que tem dependencias em FKs

INSERT INTO PRODUCT (PRODUCT_DESC, UNIT_MEASURE, PRODUCT_VALUE)
VALUES('Delete test','LT',5.50);

SELECT * FROM PRODUCT;

DELETE FROM PRODUCT WHERE PRODUCT_CODE = 4;